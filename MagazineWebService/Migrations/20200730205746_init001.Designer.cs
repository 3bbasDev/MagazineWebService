// <auto-generated />
using System;
using MagazineWebService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MagazineWebService.Migrations
{
    [DbContext(typeof(MagazineContext))]
    [Migration("20200730205746_init001")]
    partial class init001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MagazineWebService.Infrastructure.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .HasDefaultValue(null);

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .HasDefaultValue(null);

                    b.Property<DateTime>("Issued")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Policies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "ADMIN",
                            Number = 1000
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "GUEST",
                            Number = 2000
                        });
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.PolicyRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("Add")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("Delete")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("PolicyId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<bool?>("Update")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("View")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("PolicyId");

                    b.HasIndex("RoleId");

                    b.ToTable("PolicyRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Add = true,
                            Delete = true,
                            IsDeleted = false,
                            PolicyId = 1,
                            RoleId = 1,
                            Update = true,
                            View = true
                        },
                        new
                        {
                            Id = 2,
                            Add = true,
                            Delete = true,
                            IsDeleted = false,
                            PolicyId = 1,
                            RoleId = 2,
                            Update = true,
                            View = true
                        },
                        new
                        {
                            Id = 3,
                            Add = true,
                            Delete = true,
                            IsDeleted = false,
                            PolicyId = 1,
                            RoleId = 3,
                            Update = true,
                            View = true
                        },
                        new
                        {
                            Id = 4,
                            Add = true,
                            Delete = true,
                            IsDeleted = false,
                            PolicyId = 1,
                            RoleId = 4,
                            Update = true,
                            View = true
                        },
                        new
                        {
                            Id = 5,
                            Add = true,
                            Delete = true,
                            IsDeleted = true,
                            PolicyId = 1,
                            RoleId = 5,
                            Update = true,
                            View = true
                        });
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Issued")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Views")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccreditationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10)
                        .HasDefaultValue(null);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue(null);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SlidShow")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Views")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Post"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Comment"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Section"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Upload"
                        });
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<Guid?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValue(null);

                    b.HasKey("Id");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9edcd3e6-f364-4a06-9ce1-87fa6e057874"),
                            IsDeleted = false,
                            Name = "الاخبار"
                        },
                        new
                        {
                            Id = new Guid("9dccd319-4a8b-404a-9f91-fce8b279b19d"),
                            IsDeleted = false,
                            Name = "اخبار محلية",
                            ParentId = new Guid("9edcd3e6-f364-4a06-9ce1-87fa6e057874")
                        },
                        new
                        {
                            Id = new Guid("2f515dea-9a94-4a57-bcb6-2562b0ee60f5"),
                            IsDeleted = false,
                            Name = "اخبار دولية",
                            ParentId = new Guid("9edcd3e6-f364-4a06-9ce1-87fa6e057874")
                        },
                        new
                        {
                            Id = new Guid("8223eeed-3df2-4d1f-9b04-9d1ec6ad1c3d"),
                            IsDeleted = false,
                            Name = "اخبار عربية",
                            ParentId = new Guid("9edcd3e6-f364-4a06-9ce1-87fa6e057874")
                        },
                        new
                        {
                            Id = new Guid("bae1e65f-4bff-4627-a39e-8807f7005c47"),
                            IsDeleted = false,
                            Name = "اخبار امنية",
                            ParentId = new Guid("9edcd3e6-f364-4a06-9ce1-87fa6e057874")
                        },
                        new
                        {
                            Id = new Guid("d1de1f0c-74d7-482d-814e-c82e5693fc9c"),
                            IsDeleted = false,
                            Name = "اخبار سياسية",
                            ParentId = new Guid("9edcd3e6-f364-4a06-9ce1-87fa6e057874")
                        },
                        new
                        {
                            Id = new Guid("2f6d3098-ede5-4125-b8e5-6131327b876d"),
                            IsDeleted = false,
                            Name = "ثقافة"
                        },
                        new
                        {
                            Id = new Guid("680dbcab-7a33-47ca-9fea-0b2f19ae11f6"),
                            IsDeleted = false,
                            Name = "رياضة"
                        },
                        new
                        {
                            Id = new Guid("7d9ee551-aec3-4b17-826c-7df954b12375"),
                            IsDeleted = false,
                            Name = "رياضة محلية",
                            ParentId = new Guid("680dbcab-7a33-47ca-9fea-0b2f19ae11f6")
                        },
                        new
                        {
                            Id = new Guid("7be8a042-e4ca-499b-8068-d3af75f259e7"),
                            IsDeleted = false,
                            Name = "رياضة عربية",
                            ParentId = new Guid("680dbcab-7a33-47ca-9fea-0b2f19ae11f6")
                        },
                        new
                        {
                            Id = new Guid("bd03554e-5c70-49d1-8fba-09bd326a4091"),
                            IsDeleted = false,
                            Name = "رياضة دولية",
                            ParentId = new Guid("680dbcab-7a33-47ca-9fea-0b2f19ae11f6")
                        },
                        new
                        {
                            Id = new Guid("fe22da2e-9b47-44e4-911c-3e225ac69e76"),
                            IsDeleted = false,
                            Name = "اقتصاد"
                        },
                        new
                        {
                            Id = new Guid("a338c36f-febf-454e-85ce-6ba80037272e"),
                            IsDeleted = false,
                            Name = "اقتصاد محلي"
                        },
                        new
                        {
                            Id = new Guid("0d19070c-caa5-4097-af84-398635e62b78"),
                            IsDeleted = false,
                            Name = "اقتصاد عربي"
                        },
                        new
                        {
                            Id = new Guid("589c4332-3207-4a99-a386-1e136f8f2535"),
                            IsDeleted = false,
                            Name = "اقتصاد عالمي"
                        },
                        new
                        {
                            Id = new Guid("794019be-ca17-4f39-bc39-ba3aeb6abbed"),
                            IsDeleted = false,
                            Name = "تحقيقات واستطلاعات"
                        },
                        new
                        {
                            Id = new Guid("11a9dc6d-45e8-4ba0-a6f5-db294afbcf1b"),
                            IsDeleted = false,
                            Name = "حوارات"
                        },
                        new
                        {
                            Id = new Guid("24c15152-ec93-4fb7-b94b-ffab71b8f64f"),
                            IsDeleted = false,
                            Name = "منوعات"
                        },
                        new
                        {
                            Id = new Guid("af677486-1e9b-4526-96be-8a70fcc5788a"),
                            IsDeleted = false,
                            Name = "مقالات"
                        },
                        new
                        {
                            Id = new Guid("12555e70-5bde-4b12-82fd-0584bd74aa8b"),
                            IsDeleted = false,
                            Name = "اثار ومواقع"
                        });
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .HasDefaultValue(null);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<int>("PolicyId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("PolicyId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86c70521-b68b-4f77-88fa-a4478bca59c1"),
                            FirstName = "ahmed",
                            IsDeleted = false,
                            LastName = "Ali",
                            Password = "W/odSodeiWRIka+NRohTcX+z9N3pW/K2QCQeKsZK3jKWuQj6",
                            PolicyId = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.Comment", b =>
                {
                    b.HasOne("MagazineWebService.Infrastructure.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.PolicyRole", b =>
                {
                    b.HasOne("MagazineWebService.Infrastructure.Policy", "Policy")
                        .WithMany("PolicyRoles")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MagazineWebService.Infrastructure.Role", "Role")
                        .WithMany("PolicyRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.Post", b =>
                {
                    b.HasOne("MagazineWebService.Infrastructure.Section", "Section")
                        .WithMany("Posts")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MagazineWebService.Infrastructure.User", b =>
                {
                    b.HasOne("MagazineWebService.Infrastructure.Policy", "Policy")
                        .WithMany("Users")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
